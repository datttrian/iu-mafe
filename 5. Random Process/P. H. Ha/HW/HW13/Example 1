{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Example 1","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMjUaR5j8nNExBZ/ZuK4vQ8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":22,"metadata":{"id":"P5tYCNyspJrv","executionInfo":{"status":"ok","timestamp":1640741184717,"user_tz":-420,"elapsed":4,"user":{"displayName":"Quan Nguyen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11096386105956491339"}}},"outputs":[],"source":["# Nguyen Minh Quan - MAMAIU19036\n","# Random Processes, Homework 13\n","# Euler's Method - Example 1\n","# December 29, 2021"]},{"cell_type":"code","source":["# Import Libraries\n","from math import sqrt\n","import pandas as pd\n","import numpy as np"],"metadata":{"id":"YkY7pRWxtIlq","executionInfo":{"status":"ok","timestamp":1640741185384,"user_tz":-420,"elapsed":7,"user":{"displayName":"Quan Nguyen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11096386105956491339"}}},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":["We attempt to use the Euler's method with step size $h=0.1$ to approximate the solution to the initial value problem\n","$$\\begin{matrix}y'=x\\sqrt{y}, & y(1)=4\\end{matrix}$$\n","at the points $x=1.1,1.2,1.3,1.4,1.5.$"],"metadata":{"id":"3Gltfa9ttI0y"}},{"cell_type":"code","source":["def f(x, y):\n","    return x * sqrt(y)\n","\n","def solution(x):\n","    return (x * x + 7) * (x * x + 7) / 16"],"metadata":{"id":"zpywovK2t1bF","executionInfo":{"status":"ok","timestamp":1640741185385,"user_tz":-420,"elapsed":7,"user":{"displayName":"Quan Nguyen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11096386105956491339"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["col = ['n', 'x_n', 'Euler\\'s Method', 'Exact Value']\n","df = pd.DataFrame(index = np.arange(6), columns = col)\n","h = 0.1\n","df.iloc[0] = [0, 1, 4, 4]\n","for i in range(1, 6):\n","    x_n, y_n = df['x_n'][i - 1], df['Euler\\'s Method'][i - 1]\n","    df['n'][i] = i\n","    df['x_n'][i] = x_n + h\n","    df['Euler\\'s Method'][i] = y_n + h * f(x_n, y_n)\n","    df['Exact Value'][i] = solution(x_n + h)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"-4nlQ_vUuOG2","executionInfo":{"status":"ok","timestamp":1640741185385,"user_tz":-420,"elapsed":6,"user":{"displayName":"Quan Nguyen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11096386105956491339"}},"outputId":"e2cc423b-dc5d-4864-9871-7ec2d30c34cb"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-88553369-d3fc-46bf-b187-374c4a5ff7c1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>n</th>\n","      <th>x_n</th>\n","      <th>Euler's Method</th>\n","      <th>Exact Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1.1</td>\n","      <td>4.2</td>\n","      <td>4.21276</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1.2</td>\n","      <td>4.42543</td>\n","      <td>4.4521</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1.3</td>\n","      <td>4.67787</td>\n","      <td>4.71976</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1.4</td>\n","      <td>4.95904</td>\n","      <td>5.0176</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>1.5</td>\n","      <td>5.27081</td>\n","      <td>5.34766</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-88553369-d3fc-46bf-b187-374c4a5ff7c1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-88553369-d3fc-46bf-b187-374c4a5ff7c1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-88553369-d3fc-46bf-b187-374c4a5ff7c1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   n  x_n Euler's Method Exact Value\n","0  0    1              4           4\n","1  1  1.1            4.2     4.21276\n","2  2  1.2        4.42543      4.4521\n","3  3  1.3        4.67787     4.71976\n","4  4  1.4        4.95904      5.0176\n","5  5  1.5        5.27081     5.34766"]},"metadata":{},"execution_count":25}]}]}