{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"HW6 - Health Claims","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNrC1cFGIetmpWohFlrsUI2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"kOckoNGBc6uD"},"source":["# Nguyen Minh Quan - MAMAIU19036\n","# Random Processes, Homework 5\n","# Compound Poisson Process - Health Claims\n","# October 27, 2021"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ExwppijQS2ZC"},"source":["Recall that if $\\left\\{W_n\\right\\}_{n\\in\\mathbb{N}}$ are independent, identically distributed random variables of some distribution $F$ and are independent of a Poisson process $\\left\\{N_t\\right\\}$ with rate $\\lambda>0,$ then the process $\\left\\{R_t\\right\\}_{t\\geq0}$ defined by\n","$$R_t=\\sum_{i=1}^{N_t}W_i$$\n","is called a **compound Poisson process**.\n","\n","We attempt to simulate such a compound Poisson process $\\left\\{R_t\\right\\}$ with $\\lambda=20$ and $W_i\\sim Exp(0.002).$"]},{"cell_type":"code","metadata":{"id":"km6FVv5Y2QTz"},"source":["# Import Libraries\n","import math\n","import numpy as np\n","import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4UB-JAOKtZY8"},"source":["# Generate Compound Poisson Process of Exponential Jumps\n","def compound_poisson_exponential(arrival_rate, time, jump_rate):\n","    arrivals = np.random.poisson(arrival_rate * time)\n","    if (arrivals > 0):\n","        W_i = np.random.exponential(1 / jump_rate, arrivals)\n","        R_t = np.sum(W_i)\n","        return R_t\n","    else: \n","        return 0\n","\n","# Simulate Multiple Scenarios\n","def sample_compound_poisson(sample_size, parameters):\n","    arrival_rate, jump_rate = parameters[0], parameters[2]\n","    time = parameters[1]\n","    S = [0] * sample_size\n","    for i in range(0, sample_size):\n","        S[i] = compound_poisson_exponential(arrival_rate, time, jump_rate)\n","    return S\n","\n","def statistics(sample_data):\n","    print('Mean:', \"{:.4f}\".format(np.mean(sample_data)))\n","    print('Variance:', \"{:.4f}\".format(np.var(sample_data)))\n","    count = 0\n","    for i in range(0, len(sample_data)):\n","        if (sample_data[i] > 120000): count += 1 \n","    print('Approximation of P(R_10 > 120,000):', \n","          \"{:.4f}\".format(count / len(sample_data)))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mRguEDm7yjC3","colab":{"base_uri":"https://localhost:8080/","height":320},"executionInfo":{"status":"ok","timestamp":1635336194499,"user_tz":-420,"elapsed":634,"user":{"displayName":"Quan Nguyen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11096386105956491339"}},"outputId":"9f73aef0-a34b-4099-b3a6-6e3fc654c222"},"source":["# Histogram of Sample Data\n","sample_size = int(math.pow(10, 4))\n","parameters = [20, 10, 1 / 500]\n","sample_data = sample_compound_poisson(sample_size, parameters)\n","plt.hist(sample_data)\n","plt.show()\n","# Statistics of Sample Data\n","statistics(sample_data)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYsAAAD8CAYAAACGsIhGAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAATbElEQVR4nO3df6zd9X3f8eerEEjTdsGAyxxjZidxu5lJofSKEGWrsrKCgakk6hoZVY2bIrlaoUumSJNJtNE2QyL9FQktJXGFVVKxEJofihu8Eocl6jopgMmAYIjLDZhhy4ALhLSKhGr63h/nYzh2fPncc+859x6H50M6Ot/z/n7O9/s+P+553e+Pc2+qCkmSXs2PLHcDkqTpZ1hIkroMC0lSl2EhSeoyLCRJXYaFJKmrGxZJXp/kniQPJNmT5HdafV2Su5PMJvlsklNa/dR2e7bNXzu0rGtbfW+SSyb1oCRJ4zWfLYsXgZ+vqrcB5wEbk1wIfAz4eFW9FXgeuKqNvwp4vtU/3saRZAOwCTgX2Aj8cZKTxvlgJEmT0Q2LGvj7dvN17VLAzwOfa/VbgHe36Svabdr8i5Kk1W+rqher6nFgFrhgLI9CkjRRJ89nUNsCuA94K/AJ4DvAd6vqcBuyH1jdplcDTwJU1eEkLwBntPo3hhY7fJ/jOvPMM2vt2rXzeiCSpIH77rvvb6tq5TiXOa+wqKqXgPOSnAZ8Efjn42xiWJItwBaAc845h927d09qVZL0QynJE+Ne5khnQ1XVd4GvAe8ATktyJGzOBg606QPAGoA2/43As8P149xneB3bqmqmqmZWrhxrMEqSFmg+Z0OtbFsUJPlR4BeARxiExr9vwzYDX2rTO9pt2vz/VYO/VrgD2NTOlloHrAfuGdcDkSRNznx2Q60CbmnHLX4EuL2qvpzkYeC2JP8N+L/AzW38zcCfJZkFnmNwBhRVtSfJ7cDDwGHg6rZ7S5I05TLNf6J8ZmamPGYhSaNJcl9VzYxzmX6DW5LUZVhIkroMC0lSl2EhSeoyLCRJXfP6Brc0rdZuvWPZ1r3vhsuXbd3SUnPLQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEld3bBIsibJ15I8nGRPkg+0+m8nOZDk/na5bOg+1yaZTbI3ySVD9Y2tNptk62QekiRp3E6ex5jDwIeq6ptJfgK4L8muNu/jVfUHw4OTbAA2AecCbwK+muSn2uxPAL8A7AfuTbKjqh4exwORJE1ONyyq6iBwsE3/XZJHgNWvcpcrgNuq6kXg8SSzwAVt3mxVPQaQ5LY21rCQpCk30jGLJGuBnwHubqVrkjyYZHuSFa22Gnhy6G77W22uuiRpys07LJL8OPB54INV9T3gJuAtwHkMtjz+cBwNJdmSZHeS3YcOHRrHIiVJizSvsEjyOgZBcWtVfQGgqp6uqpeq6h+BP+GVXU0HgDVDdz+71eaqH6WqtlXVTFXNrFy5ctTHI0magPmcDRXgZuCRqvqjofqqoWHvAR5q0zuATUlOTbIOWA/cA9wLrE+yLskpDA6C7xjPw5AkTdJ8zoZ6J/CrwLeS3N9qHwauTHIeUMA+4DcAqmpPktsZHLg+DFxdVS8BJLkGuBM4CdheVXvG+FgkSRMyn7Oh/hrIcWbtfJX7XA9cf5z6zle7nyRpOvkNbklSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1DWfL+VJOo61W+9YlvXuu+HyZVmvXtvcspAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkrq6YZFkTZKvJXk4yZ4kH2j105PsSvJou17R6klyY5LZJA8mOX9oWZvb+EeTbJ7cw5IkjdN8tiwOAx+qqg3AhcDVSTYAW4G7qmo9cFe7DXApsL5dtgA3wSBcgOuAtwMXANcdCRhJ0nTrhkVVHayqb7bpvwMeAVYDVwC3tGG3AO9u01cAn66BbwCnJVkFXALsqqrnqup5YBewcayPRpI0ESMds0iyFvgZ4G7grKo62GY9BZzVplcDTw7dbX+rzVU/dh1bkuxOsvvQoUOjtCdJmpCT5zswyY8Dnwc+WFXfS/LyvKqqJDWOhqpqG7ANYGZmZizL1OSt3XrHcrcgaYLmtWWR5HUMguLWqvpCKz/ddi/Rrp9p9QPAmqG7n91qc9UlSVNuPmdDBbgZeKSq/mho1g7gyBlNm4EvDdXf186KuhB4oe2uuhO4OMmKdmD74laTJE25+eyGeifwq8C3ktzfah8GbgBuT3IV8ATw3jZvJ3AZMAt8H3g/QFU9l+SjwL1t3O9W1XNjeRSSpInqhkVV/TWQOWZfdJzxBVw9x7K2A9tHaVCStPz8BrckqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpK5uWCTZnuSZJA8N1X47yYEk97fLZUPzrk0ym2RvkkuG6htbbTbJ1vE/FEnSpMxny+JPgY3HqX+8qs5rl50ASTYAm4Bz233+OMlJSU4CPgFcCmwArmxjJUkngJN7A6rqr5KsnefyrgBuq6oXgceTzAIXtHmzVfUYQJLb2tiHR+5YkrTkFnPM4pokD7bdVCtabTXw5NCY/a02V/0HJNmSZHeS3YcOHVpEe5KkcVloWNwEvAU4DzgI/OG4GqqqbVU1U1UzK1euHNdiJUmL0N0NdTxV9fSR6SR/Any53TwArBkaenar8Sp1SdKUW9CWRZJVQzffAxw5U2oHsCnJqUnWAeuBe4B7gfVJ1iU5hcFB8B0Lb1uStJS6WxZJPgO8CzgzyX7gOuBdSc4DCtgH/AZAVe1JcjuDA9eHgaur6qW2nGuAO4GTgO1VtWfsj0aSNBHzORvqyuOUb36V8dcD1x+nvhPYOVJ3kqSp4De4JUldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6FvSf8iQtn7Vb71i2de+74fJlW7eWl1sWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVJXNyySbE/yTJKHhmqnJ9mV5NF2vaLVk+TGJLNJHkxy/tB9NrfxjybZPJmHI0mahPlsWfwpsPGY2lbgrqpaD9zVbgNcCqxvly3ATTAIF+A64O3ABcB1RwJGkjT9umFRVX8FPHdM+QrgljZ9C/Duofqna+AbwGlJVgGXALuq6rmqeh7YxQ8GkCRpSi30mMVZVXWwTT8FnNWmVwNPDo3b32pz1X9Aki1JdifZfejQoQW2J0kap0Uf4K6qAmoMvRxZ3raqmqmqmZUrV45rsZKkRVhoWDzddi/Rrp9p9QPAmqFxZ7faXHVJ0glgoWGxAzhyRtNm4EtD9fe1s6IuBF5ou6vuBC5OsqId2L641SRJJ4Du/+BO8hngXcCZSfYzOKvpBuD2JFcBTwDvbcN3ApcBs8D3gfcDVNVzST4K3NvG/W5VHXvQXJI0pbphUVVXzjHrouOMLeDqOZazHdg+UneSpKngN7glSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6up+KU8nlrVb71juFiT9EHLLQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSuhYVFkn2JflWkvuT7G6105PsSvJou17R6klyY5LZJA8mOX8cD0CSNHnj2LL4N1V1XlXNtNtbgbuqaj1wV7sNcCmwvl22ADeNYd2SpCUwid1QVwC3tOlbgHcP1T9dA98ATkuyagLrlySN2WLDooCvJLkvyZZWO6uqDrbpp4Cz2vRq4Mmh++5vNUnSlDt5kff/V1V1IMlPAruSfHt4ZlVVkhplgS10tgCcc845i2xPkjQOi9qyqKoD7foZ4IvABcDTR3Yvtetn2vADwJqhu5/dascuc1tVzVTVzMqVKxfTniRpTBYcFkl+LMlPHJkGLgYeAnYAm9uwzcCX2vQO4H3trKgLgReGdldJkqbYYnZDnQV8McmR5fyPqvrLJPcCtye5CngCeG8bvxO4DJgFvg+8fxHrlrQM1m69Y1nWu++Gy5dlvXrFgsOiqh4D3nac+rPARcepF3D1QtcnSVo+foNbktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6FvM/uDWH5fo/xZI0KW5ZSJK6DAtJUpdhIUnqMiwkSV0e4JY09ZbzpJF9N1y+bOueJm5ZSJK6DAtJUpdhIUnqWvKwSLIxyd4ks0m2LvX6JUmjW9KwSHIS8AngUmADcGWSDUvZgyRpdEt9NtQFwGxVPQaQ5DbgCuDhSazMP7shabGW63Nk2s7CWurdUKuBJ4du7281SdIUm7rvWSTZAmxpN/8+yd5lbOdM4G+Xcf2jOFF6PVH6BHudhBOlT1jmXvOxkYYf2+s/G2szLH1YHADWDN0+u9VeVlXbgG1L2dRckuyuqpnl7mM+TpReT5Q+wV4n4UTpE+z1WEu9G+peYH2SdUlOATYBO5a4B0nSiJZ0y6KqDie5BrgTOAnYXlV7lrIHSdLolvyYRVXtBHYu9XoXaCp2h83TidLridIn2OsknCh9gr0eJVU16XVIkk5w/rkPSVJfVf1QX4CfBu4funwP+CBwOrALeLRdr2jjA9wIzAIPAucPLWtzG/8osHmo/rPAt9p9bqRtsS2w3/8E7AEeAj4DvB5YB9zdlv9Z4JQ29tR2e7bNXzu0nGtbfS9wyVB9Y6vNAlsX0ecHWo97gA+22lQ8p8B24BngoaHaxHubax0L6PWX2/P6j8DMMeNHel0X8t4ZsdffB77dnrsvAqctd69z9PnR1uP9wFeAN03r6z8070NAAWdORa8L/bA4ES8MDqo/xeAc5N878kYFtgIfa9OXAf+zvTAXAncPPbmPtesVbfrIB849bWzafS9dYH+rgceBH223bwd+rV1varVPAv+hTf8m8Mk2vQn4bJveADzQfsjWAd9pj/2kNv1m4JQ2ZsMC+vyXDILiDQyOe30VeOu0PKfAzwHnc/SHxcR7m2sdC+j1XzD4JefrDIXFQl7XUd87C+j1YuDkNv2xoed12Xqdo89/MjT9H4eWN3Wvf6uvYXAi0BO8EhbL2+tCPtRO1Et7Y/+fNr0XWNWmVwF72/SngCuH7rO3zb8S+NRQ/VOttgr49lD9qHEj9nfkG+6nM/gQ/jJwCYMv2xz5gXwHcGebvhN4R5s+uY0Lg9/orh1a7p3tfi/ft9WPGjdCn78M3Dx0+78A/3manlNgLUd/WEy8t7nWMWqvQ/Wvc3RYjPS6tvfCSO+dhfba5r0HuHUaeu30eS1w0zS//sDngLcB+3glLJa119faMYtNDHbtAJxVVQfb9FPAWW16rj9J8mr1/cepj6yqDgB/APw/4CDwAnAf8N2qOnyc5b/cU5v/AnDGAh7DqB4C/nWSM5K8gcFvPGuYwud0yFL0Ntc6xmXUXs9g9PfOYvw6g99ep7LXJNcneRL4FeC/LrDPib/+Sa4ADlTVA8fMWtZeXzNh0b4E+IvAnx87rwbxWkve1DGSrGDwhxXXAW8CfozB/t2pUlWPMNjl8BXgLxnsB37pmDFT8Zwez1L0Ns2PfxKSfAQ4DNy63L3Mpao+UlVrGPR4zYTXtaDXv/3y9WFeCbOJm2+vr5mwYPBn0b9ZVU+3208nWQXQrp9p9bn+JMmr1c8+Tn0h/i3weFUdqqp/AL4AvBM4LcmR78QML//lntr8NwLPLuAxjKyqbq6qn62qnwOeB/6G6XxOj1iK3uZax7iM2uuzjP7eGVmSXwP+HfAr7YNnanttbgV+aYF9Tvr1fwuDXxYfSLKvLf+bSf7psvc6n31qPwwX4Dbg/UO3f5+jD/D8Xpu+nKMPIt3T6qczOPi8ol0eB05v8449iHTZAnt8O4OzYN7QlnUL8FsMtoaGD/z9Zpu+mqMP/N3eps/l6IOLjzE4sHhym17HKwcXz11grz/Zrs9hcDbMadP0nPKDxywm3ttc6xi116H61zn6mMXIr+uo750FPK8bGfyLgZXHjFvWXo/T5/qh6d8CPjftr3+bt49Xjlksa6/L/iG+FBcGu3OeBd44VDsDuIvBqWNfHXpyw+AfNH2HwSlnwz+sv87gFLRZjg6eGQb78b8D/HcWd+rs7zD48H0I+LP2w/bm9qLPth+oU9vY17fbs23+m4eW85HWz16GziRicHzhb9q8jyyiz//N4EPiAeCiaXpOGRyXOgj8A4P9tFctRW9zrWMBvb6nTb8IPM3RB4RHel0X8t4ZsddZBvvLj5ya/snl7nWOPj/fXrMHgb8AVk/r63/M/H0cferssvXqN7glSV2vpWMWkqQFMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVLX/weXQxPKftMi1gAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Mean: 100068.0637\n","Variance: 98919656.4302\n","Approximation of P(R_10 > 120,000): 0.0259\n"]}]},{"cell_type":"markdown","metadata":{"id":"i9iw-FuYo-ql"},"source":["It can be seen that the distribution of $R_{10}$ is approximately normal."]},{"cell_type":"markdown","metadata":{"id":"7LMC0azr2xHM"},"source":["End of Simulation."]}]}